{"version":3,"sources":["components/Profile/Profile.module.css","components/Profile/Profile.jsx","App.jsx","index.js"],"names":["module","exports","profileCard","userAvatar","username","username__info","stats__headers","numbers","stats","stats__item","description","Profile","_ref","tag","location","avatar","_ref$stats","followers","views","likes","react_default","a","createElement","className","clsx","css","src","alt","App","Profile_Profile","user","ReactDOM","createRoot","document","getElementById","render","StrictMode","App_App"],"mappings":"2EACAA,EAAAC,QAAA,CAAkBC,YAAA,6BAAAC,WAAA,4BAAAC,SAAA,0BAAAC,eAAA,gCAAAC,eAAA,gCAAAC,QAAA,yBAAAC,MAAA,uBAAAC,YAAA,6BAAAC,YAAA,iICKLC,EAAU,SAAHC,GAAgF,IAA1ER,EAAQQ,EAARR,SAAUS,EAAGD,EAAHC,IAAKC,EAAQF,EAARE,SAAUC,EAAMH,EAANG,OAAMC,EAAAJ,EAAEJ,MAASS,EAASD,EAATC,UAAWC,EAAKF,EAALE,MAAOC,EAAKH,EAALG,MAClF,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,YAAKC,IAAIvB,cACzBkB,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,YAAKC,IAAIf,cACrBU,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,YAAKC,IAAItB,YACrBuB,IAAKX,EACLY,IAAI,gBAERP,EAAAC,EAAAC,cAAA,KAAGC,UAAWC,YAAKC,IAAIrB,WAAYA,GACnCgB,EAAAC,EAAAC,cAAA,KAAGC,UAAWC,YAAKC,IAAIpB,iBAAgB,IAAGQ,GAC1CO,EAAAC,EAAAC,cAAA,KAAGC,UAAWC,YAAKC,IAAIpB,iBAAkBS,IAG7CM,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,YAAKC,IAAIjB,QACpBY,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,YAAKC,IAAIhB,cACpBW,EAAAC,EAAAC,cAAA,QAAMC,UAAWC,YAAKC,IAAInB,iBAAgB,aACtCc,EAAAC,EAAAC,cAAA,QAAMC,UAAWC,YAAKC,IAAIlB,UAAWU,GAAwB,IAErEG,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,YAAKC,IAAIhB,cACpBW,EAAAC,EAAAC,cAAA,QAAMC,UAAWC,YAAKC,IAAInB,iBAAgB,SAC1Cc,EAAAC,EAAAC,cAAA,QAAMC,UAAWC,YAAKC,IAAIlB,UAAWW,GAAgB,IAEzDE,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,YAAKC,IAAIhB,cACpBW,EAAAC,EAAAC,cAAA,QAAMC,UAAWC,YAAKC,IAAInB,iBAAgB,SAC1Cc,EAAAC,EAAAC,cAAA,QAAMC,UAAWC,YAAKC,IAAIlB,UAAWY,GAAgB,cC1BxDS,EAAM,WACjB,OACER,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACO,EAAO,CACJzB,SAAU0B,EAAK1B,SACfS,IAAKiB,EAAKjB,IACVC,SAAUgB,EAAKhB,SACfC,OAAQe,EAAKf,OACbP,MAAOsB,EAAKtB,UCHtBuB,IAASC,WAAWC,SAASC,eAAe,SAASC,OACnDf,EAAAC,EAAAC,cAACF,EAAAC,EAAMe,WAAU,KACfhB,EAAAC,EAAAC,cAACe,EAAG","file":"static/js/main.0d912360.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileCard\":\"Profile_profileCard__2_HQB\",\"userAvatar\":\"Profile_userAvatar__1H7d5\",\"username\":\"Profile_username__1SdTH\",\"username__info\":\"Profile_username__info__1bgtw\",\"stats__headers\":\"Profile_stats__headers__zbyOn\",\"numbers\":\"Profile_numbers__3NFGN\",\"stats\":\"Profile_stats__2DXXK\",\"stats__item\":\"Profile_stats__item__3vaVM\",\"description\":\"Profile_description__194uS\"};","import PropTypes from 'prop-types';\nimport React from 'react';\nimport css from './Profile.module.css';\nimport clsx from \"clsx\";\n\n\nexport const Profile = ({ username, tag, location, avatar, stats: { followers, views, likes } }) => {\n    return (\n        <div className={clsx(css.profileCard)}>\n        <div className={clsx(css.description)}>\n            <img className={clsx(css.userAvatar)}\n                src={avatar}\n                alt=\"User avatar\"\n            />\n            <p className={clsx(css.username)}>{username}</p>\n            <p className={clsx(css.username__info)}>@{tag}</p>\n            <p className={clsx(css.username__info)}>{location}</p>\n        </div>\n\n        <ul className={clsx(css.stats)}>\n            <li className={clsx(css.stats__item)}>\n                <span className={clsx(css.stats__headers)}>Followers</span>\n                    <span className={clsx(css.numbers)}>{followers ? followers : 0}</span>\n            </li>\n            <li className={clsx(css.stats__item)}>\n                <span className={clsx(css.stats__headers)}>Views</span>\n                <span className={clsx(css.numbers)}>{views ? views : 0}</span>\n            </li>\n            <li className={clsx(css.stats__item)}>\n                <span className={clsx(css.stats__headers)}>Likes</span>\n                <span className={clsx(css.numbers)}>{likes ? likes : 0}</span>\n            </li>\n        </ul>\n    </div>);\n};\n\nProfile.propTypes = {\n    username: PropTypes.string.isRequired,\n    tag: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired,\n    avatar: PropTypes.string.isRequired,\n    stats: PropTypes.exact({\n        followers: PropTypes.number.isRequired,\n        views: PropTypes.number.isRequired,\n        likes: PropTypes.number.isRequired,\n    })\n}","import { Profile } from './components/Profile/Profile';\nimport user from './components/Profile/user.json';\nimport React from 'react';\n\nexport const App = () => {\n  return (\n    <div>\n      <Profile\n          username={user.username}\n          tag={user.tag}\n          location={user.location}\n          avatar={user.avatar}\n          stats={user.stats}\n      />\n     \n    </div> \n  );\n};\n\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { App } from './App.jsx';\n\n\n\n\n\n\nReactDOM.createRoot(document.getElementById('root')).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}